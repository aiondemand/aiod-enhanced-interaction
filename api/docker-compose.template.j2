services:
  # FastAPI service
  app:
    build:
      context: .. #TODO change context once the repo is reorganized (we need pyproject.toml to be in the same folder as the dockerfiles)
      dockerfile: api/Dockerfile
    command: /bin/sh -c "python scripts/milvus_credentials_setup.py && uvicorn app.main:app --host 0.0.0.0 --port 80"
    env_file:
      - .env.app
    environment:
      - TINYDB_FILEPATH=/data/tinydb.json
      - USE_GPU={{ USE_GPU }}
      - MILVUS__URI=http://milvus-standalone:19530
      - MILVUS__USER=${MILVUS_AIOD_USER}
      - MILVUS__PASS=${MILVUS_AIOD_PASS}
      - MILVUS__EXTRACT_METADATA={{ USE_LLM }}
      - MILVUS_NEW_ROOT_PASS=${MILVUS_NEW_ROOT_PASS}
      {% if USE_LLM == "true" %}
      - OLLAMA__URI=http://ollama:11434
      {% endif %}
    ports:
      - "${APP_HOST_PORT}:80"
    depends_on:
      - milvus-standalone
      {% if USE_LLM == "true" %}
      - ollama
      {% endif %}
    volumes:
      - ${DATA_DIRPATH}/volumes/tinydb:/data
      - ${DATA_DIRPATH}/model:/model
    {% if USE_GPU == "true" %}
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    {% endif %}

  # Milvus services
  milvus-etcd:
    image: quay.io/coreos/etcd:v3.5.16
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - ${DATA_DIRPATH}/volumes/etcd:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 20s
      retries: 3

  milvus-minio:
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
    ports:
      - "${MINIO_HOST_PORT_9001}:9001"
      - "${MINIO_HOST_PORT_9000}:9000"
    volumes:
      - ${DATA_DIRPATH}/volumes/minio:/minio_data
    command: minio server /minio_data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  milvus-standalone:
    image: milvusdb/milvus:v2.5.5
    command: ["milvus", "run", "standalone"]
    security_opt:
      - seccomp:unconfined
    environment:
      ETCD_ENDPOINTS: milvus-etcd:2379
      MINIO_ADDRESS: milvus-minio:9000
      MINIO_ACCESS_KEY_ID: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_ACCESS_KEY: ${MINIO_SECRET_KEY}
    volumes:
      - ./milvus.yaml:/milvus/configs/milvus.yaml
      - ${DATA_DIRPATH}/volumes/milvus:/var/lib/milvus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3
    ports:
      - "${MILVUS_HOST_PORT_19530}:19530"
      - "${MILVUS_HOST_PORT_9091}:9091"
    depends_on:
      - milvus-etcd
      - milvus-minio
  {% if USE_LLM == "true" %}

  #Ollama service
  ollama:
    image: ollama/ollama:0.5.4
    volumes:
      - ${DATA_DIRPATH}/ollama:/root/.ollama/
    ports:
      - "${OLLAMA_HOST_PORT}:11434"
    {% if USE_GPU == "true" %}
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    {% endif %}
  {% endif %}
